-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-11-18 17:03:08 CET
--   site:      SQL Server 2008
--   type:      SQL Server 2008



CREATE TABLE HR.COUNTRIES 
    (
     COUNTRY_ID CHAR (2) NOT NULL , 
     COUNTRY_NAME VARCHAR (40) , 
     REGION_ID NUMERIC (28) 
    )
GO 



EXEC sp_addextendedproperty 'MS_Description' , 'country table. Contains 25 rows. References with locations table.' , 'USER' , 'dbo' , 'TABLE' , 'COUNTRIES' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Primary key of countries table.' , 'USER' , 'dbo' , 'TABLE' , 'COUNTRIES' , 'COLUMN' , 'COUNTRY_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Country name' , 'USER' , 'dbo' , 'TABLE' , 'COUNTRIES' , 'COLUMN' , 'COUNTRY_NAME' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Region ID for the country. Foreign key to region_id column in the departments table.' , 'USER' , 'dbo' , 'TABLE' , 'COUNTRIES' , 'COLUMN' , 'REGION_ID' 
GO

ALTER TABLE HR.COUNTRIES ADD CONSTRAINT COUNTRY_C_ID_PK PRIMARY KEY CLUSTERED (COUNTRY_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE HR.DEPARTMENTS 
    (
     DEPARTMENT_ID NUMERIC (4) NOT NULL , 
     DEPARTMENT_NAME VARCHAR (30) NOT NULL , 
     MANAGER_ID NUMERIC (6) , 
     LOCATION_ID NUMERIC (4) 
    )
GO 



EXEC sp_addextendedproperty 'MS_Description' , 'Departments table that shows details of departments where employees
work. Contains 27 rows; references with locations, employees, and job_history tables.' , 'USER' , 'dbo' , 'TABLE' , 'DEPARTMENTS' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Primary key column of departments table.' , 'USER' , 'dbo' , 'TABLE' , 'DEPARTMENTS' , 'COLUMN' , 'DEPARTMENT_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'A not null column that shows name of a department. Administration,
Marketing, Purchasing, Human Resources, Shipping, IT, Executive, Public
Relations, Sales, Finance, and Accounting. ' , 'USER' , 'dbo' , 'TABLE' , 'DEPARTMENTS' , 'COLUMN' , 'DEPARTMENT_NAME' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Manager_id of a department. Foreign key to employee_id column of employees table. The manager_id column of the employee table references this column.' , 'USER' , 'dbo' , 'TABLE' , 'DEPARTMENTS' , 'COLUMN' , 'MANAGER_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Location id where a department is located. Foreign key to location_id column of locations table.' , 'USER' , 'dbo' , 'TABLE' , 'DEPARTMENTS' , 'COLUMN' , 'LOCATION_ID' 
GO

    


CREATE UNIQUE NONCLUSTERED INDEX 
    DEPT_ID_PK ON HR.DEPARTMENTS 
    ( 
     DEPARTMENT_ID 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    DEPT_LOCATION_IX ON HR.DEPARTMENTS 
    ( 
     LOCATION_ID 
    ) 
GO

ALTER TABLE HR.DEPARTMENTS ADD CONSTRAINT DEPT_ID_PK PRIMARY KEY CLUSTERED (DEPARTMENT_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE HR.EMPLOYEES 
    (
     EMPLOYEE_ID NUMERIC (6) NOT NULL , 
     FIRST_NAME VARCHAR (20) , 
     LAST_NAME VARCHAR (25) NOT NULL , 
     EMAIL VARCHAR (25) NOT NULL , 
     PHONE_NUMBER VARCHAR (20) , 
     HIRE_DATE DATE NOT NULL , 
     JOB_ID VARCHAR (10) NOT NULL , 
     SALARY NUMERIC (8,2) , 
     COMMISSION_PCT NUMERIC (2,2) , 
     MANAGER_ID NUMERIC (6) , 
     DEPARTMENT_ID NUMERIC (4) 
    )
GO 


ALTER TABLE HR.EMPLOYEES 
    ADD CONSTRAINT EMP_SALARY_MIN 
    CHECK ( salary > 0 ) 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'employees table. Contains 107 rows. References with departments,
jobs, job_history tables. Contains a self reference.' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Primary key of employees table.' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'EMPLOYEE_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'First name of the employee. A not null column.' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'FIRST_NAME' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Last name of the employee. A not null column.' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'LAST_NAME' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Email id of the employee' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'EMAIL' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Phone number of the employee; includes country code and area code' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'PHONE_NUMBER' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Date when the employee started on this job. A not null column.' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'HIRE_DATE' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Current job of the employee; foreign key to job_id column of the
jobs table. A not null column.' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'JOB_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Monthly salary of the employee. Must be greater
than zero (enforced by constraint emp_salary_min)' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'SALARY' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Commission percentage of the employee; Only employees in sales
department elgible for commission percentage' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'COMMISSION_PCT' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Manager id of the employee; has same domain as manager_id in
departments table. Foreign key to employee_id column of employees table.
(useful for reflexive joins and CONNECT BY query)' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'MANAGER_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Department id where employee works; foreign key to department_id
column of the departments table' , 'USER' , 'dbo' , 'TABLE' , 'EMPLOYEES' , 'COLUMN' , 'DEPARTMENT_ID' 
GO

    


CREATE NONCLUSTERED INDEX 
    EMP_DEPARTMENT_IX ON HR.EMPLOYEES 
    ( 
     DEPARTMENT_ID 
    ) 
GO 


CREATE UNIQUE NONCLUSTERED INDEX 
    EMP_EMAIL_UK ON HR.EMPLOYEES 
    ( 
     EMAIL 
    ) 
GO 


CREATE UNIQUE NONCLUSTERED INDEX 
    EMP_EMP_ID_PK ON HR.EMPLOYEES 
    ( 
     EMPLOYEE_ID 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    EMP_JOB_IX ON HR.EMPLOYEES 
    ( 
     JOB_ID 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    EMP_MANAGER_IX ON HR.EMPLOYEES 
    ( 
     MANAGER_ID 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    EMP_NAME_IX ON HR.EMPLOYEES 
    ( 
     LAST_NAME , 
     FIRST_NAME 
    ) 
GO

ALTER TABLE HR.EMPLOYEES ADD CONSTRAINT EMP_EMP_ID_PK PRIMARY KEY CLUSTERED (EMPLOYEE_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO
ALTER TABLE HR.EMPLOYEES ADD CONSTRAINT EMP_EMAIL_UK UNIQUE NONCLUSTERED (EMAIL)
GO

CREATE TABLE HR.JOB_HISTORY 
    (
     EMPLOYEE_ID NUMERIC (6) NOT NULL , 
     START_DATE DATE NOT NULL , 
     END_DATE DATE NOT NULL , 
     JOB_ID VARCHAR (10) NOT NULL , 
     DEPARTMENT_ID NUMERIC (4) 
    )
GO 



EXEC sp_addextendedproperty 'MS_Description' , 'Table that stores job history of the employees. If an employee
changes departments within the job or changes jobs within the department,
new rows get inserted into this table with old job information of the
employee. Contains a complex primary key: employee_id+start_date.
Contains 25 rows. References with jobs, employees, and departments tables.' , 'USER' , 'dbo' , 'TABLE' , 'JOB_HISTORY' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'A not null column in the complex primary key employee_id+start_date.
Foreign key to employee_id column of the employee table' , 'USER' , 'dbo' , 'TABLE' , 'JOB_HISTORY' , 'COLUMN' , 'EMPLOYEE_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'A not null column in the complex primary key employee_id+start_date.
Must be less than the end_date of the job_history table. (enforced by
constraint jhist_date_interval)' , 'USER' , 'dbo' , 'TABLE' , 'JOB_HISTORY' , 'COLUMN' , 'START_DATE' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Last day of the employee in this job role. A not null column. Must be
greater than the start_date of the job_history table.
(enforced by constraint jhist_date_interval)' , 'USER' , 'dbo' , 'TABLE' , 'JOB_HISTORY' , 'COLUMN' , 'END_DATE' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Job role in which the employee worked in the past; foreign key to
job_id column in the jobs table. A not null column.' , 'USER' , 'dbo' , 'TABLE' , 'JOB_HISTORY' , 'COLUMN' , 'JOB_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Department id in which the employee worked in the past; foreign key to deparment_id column in the departments table' , 'USER' , 'dbo' , 'TABLE' , 'JOB_HISTORY' , 'COLUMN' , 'DEPARTMENT_ID' 
GO

    


CREATE NONCLUSTERED INDEX 
    JHIST_DEPARTMENT_IX ON HR.JOB_HISTORY 
    ( 
     DEPARTMENT_ID 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    JHIST_EMPLOYEE_IX ON HR.JOB_HISTORY 
    ( 
     EMPLOYEE_ID 
    ) 
GO 


CREATE UNIQUE NONCLUSTERED INDEX 
    JHIST_EMP_ID_ST_DATE_PK ON HR.JOB_HISTORY 
    ( 
     EMPLOYEE_ID , 
     START_DATE 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    JHIST_JOB_IX ON HR.JOB_HISTORY 
    ( 
     JOB_ID 
    ) 
GO

ALTER TABLE HR.JOB_HISTORY ADD CONSTRAINT JHIST_EMP_ID_ST_DATE_PK PRIMARY KEY CLUSTERED (EMPLOYEE_ID, START_DATE)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE HR.JOB_HISTORY ADD CONSTRAINT JHIST_DATE_INTERVAL CHECK ( end_date > start_date ) 
GO

CREATE TABLE HR.JOBS 
    (
     JOB_ID VARCHAR (10) NOT NULL , 
     JOB_TITLE VARCHAR (35) NOT NULL , 
     MIN_SALARY NUMERIC (6) , 
     MAX_SALARY NUMERIC (6) 
    )
GO 



EXEC sp_addextendedproperty 'MS_Description' , 'jobs table with job titles and salary ranges. Contains 19 rows.
References with employees and job_history table.' , 'USER' , 'dbo' , 'TABLE' , 'JOBS' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Primary key of jobs table.' , 'USER' , 'dbo' , 'TABLE' , 'JOBS' , 'COLUMN' , 'JOB_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'A not null column that shows job title, e.g. AD_VP, FI_ACCOUNTANT' , 'USER' , 'dbo' , 'TABLE' , 'JOBS' , 'COLUMN' , 'JOB_TITLE' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Minimum salary for a job title.' , 'USER' , 'dbo' , 'TABLE' , 'JOBS' , 'COLUMN' , 'MIN_SALARY' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Maximum salary for a job title' , 'USER' , 'dbo' , 'TABLE' , 'JOBS' , 'COLUMN' , 'MAX_SALARY' 
GO

    


CREATE UNIQUE NONCLUSTERED INDEX 
    JOB_ID_PK ON HR.JOBS 
    ( 
     JOB_ID 
    ) 
GO

ALTER TABLE HR.JOBS ADD CONSTRAINT JOB_ID_PK PRIMARY KEY CLUSTERED (JOB_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE HR.LOCATIONS 
    (
     LOCATION_ID NUMERIC (4) NOT NULL , 
     STREET_ADDRESS VARCHAR (40) , 
     POSTAL_CODE VARCHAR (12) , 
     CITY VARCHAR (30) NOT NULL , 
     STATE_PROVINCE VARCHAR (25) , 
     COUNTRY_ID CHAR (2) 
    )
GO 



EXEC sp_addextendedproperty 'MS_Description' , 'Locations table that contains specific address of a specific office,
warehouse, and/or production site of a company. Does not store addresses /
locations of customers. Contains 23 rows; references with the
departments and countries tables. ' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Primary key of locations table' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' , 'COLUMN' , 'LOCATION_ID' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Street address of an office, warehouse, or production site of a company.
Contains building number and street name' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' , 'COLUMN' , 'STREET_ADDRESS' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Postal code of the location of an office, warehouse, or production site
of a company. ' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' , 'COLUMN' , 'POSTAL_CODE' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'A not null column that shows city where an office, warehouse, or
production site of a company is located. ' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' , 'COLUMN' , 'CITY' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'State or Province where an office, warehouse, or production site of a
company is located.' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' , 'COLUMN' , 'STATE_PROVINCE' 
GO



EXEC sp_addextendedproperty 'MS_Description' , 'Country where an office, warehouse, or production site of a company is
located. Foreign key to country_id column of the countries table.' , 'USER' , 'dbo' , 'TABLE' , 'LOCATIONS' , 'COLUMN' , 'COUNTRY_ID' 
GO

    


CREATE NONCLUSTERED INDEX 
    LOC_CITY_IX ON HR.LOCATIONS 
    ( 
     CITY 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    LOC_COUNTRY_IX ON HR.LOCATIONS 
    ( 
     COUNTRY_ID 
    ) 
GO 


CREATE UNIQUE NONCLUSTERED INDEX 
    LOC_ID_PK ON HR.LOCATIONS 
    ( 
     LOCATION_ID 
    ) 
GO 


CREATE NONCLUSTERED INDEX 
    LOC_STATE_PROVINCE_IX ON HR.LOCATIONS 
    ( 
     STATE_PROVINCE 
    ) 
GO

ALTER TABLE HR.LOCATIONS ADD CONSTRAINT LOC_ID_PK PRIMARY KEY CLUSTERED (LOCATION_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

CREATE TABLE HR.REGIONS 
    (
     REGION_ID NUMERIC (28) NOT NULL , 
     REGION_NAME VARCHAR (25) 
    )
GO 

    


CREATE UNIQUE NONCLUSTERED INDEX 
    REG_ID_PK ON HR.REGIONS 
    ( 
     REGION_ID 
    ) 
GO

ALTER TABLE HR.REGIONS ADD CONSTRAINT REG_ID_PK PRIMARY KEY CLUSTERED (REGION_ID)
     WITH (
     ALLOW_PAGE_LOCKS = ON , 
     ALLOW_ROW_LOCKS = ON )
GO

ALTER TABLE HR.COUNTRIES 
    ADD CONSTRAINT COUNTR_REG_FK FOREIGN KEY 
    ( 
     REGION_ID
    ) 
    REFERENCES HR.REGIONS 
    ( 
     REGION_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.DEPARTMENTS 
    ADD CONSTRAINT DEPT_LOC_FK FOREIGN KEY 
    ( 
     LOCATION_ID
    ) 
    REFERENCES HR.LOCATIONS 
    ( 
     LOCATION_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.DEPARTMENTS 
    ADD CONSTRAINT DEPT_MGR_FK FOREIGN KEY 
    ( 
     MANAGER_ID
    ) 
    REFERENCES HR.EMPLOYEES 
    ( 
     EMPLOYEE_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.EMPLOYEES 
    ADD CONSTRAINT EMP_DEPT_FK FOREIGN KEY 
    ( 
     DEPARTMENT_ID
    ) 
    REFERENCES HR.DEPARTMENTS 
    ( 
     DEPARTMENT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.EMPLOYEES 
    ADD CONSTRAINT EMP_JOB_FK FOREIGN KEY 
    ( 
     JOB_ID
    ) 
    REFERENCES HR.JOBS 
    ( 
     JOB_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.EMPLOYEES 
    ADD CONSTRAINT EMP_MANAGER_FK FOREIGN KEY 
    ( 
     MANAGER_ID
    ) 
    REFERENCES HR.EMPLOYEES 
    ( 
     EMPLOYEE_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.JOB_HISTORY 
    ADD CONSTRAINT JHIST_DEPT_FK FOREIGN KEY 
    ( 
     DEPARTMENT_ID
    ) 
    REFERENCES HR.DEPARTMENTS 
    ( 
     DEPARTMENT_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.JOB_HISTORY 
    ADD CONSTRAINT JHIST_EMP_FK FOREIGN KEY 
    ( 
     EMPLOYEE_ID
    ) 
    REFERENCES HR.EMPLOYEES 
    ( 
     EMPLOYEE_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.JOB_HISTORY 
    ADD CONSTRAINT JHIST_JOB_FK FOREIGN KEY 
    ( 
     JOB_ID
    ) 
    REFERENCES HR.JOBS 
    ( 
     JOB_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO

ALTER TABLE HR.LOCATIONS 
    ADD CONSTRAINT LOC_C_ID_FK FOREIGN KEY 
    ( 
     COUNTRY_ID
    ) 
    REFERENCES HR.COUNTRIES 
    ( 
     COUNTRY_ID 
    ) 
    ON DELETE NO ACTION 
    ON UPDATE NO ACTION 
GO



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                            18
-- ALTER TABLE                             20
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
-- 
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
