USE BBM_ASPACE

/*CREAMOS TABLA PARA SUPUESTO, DONDE SE VA  A HACER ASIGNACIÓN DE PACIENTES DIARIOS POR PROFESIONAL Y AUXILIAR*/

/*TABLA PROS*/
DROP TABLE IF EXISTS trial.BBM_USERDATASSIGNEDPROS

CREATE TABLE trial.BBM_USERDATASSIGNEDPROS
(
	ROW# int identity (1,1),
	Usuario varchar (20) NOT NULL, 
	Nombre_Usuario varchar(10) NULL, 
	Pro_asignado Varchar(30) NULL, 
    Aux_asignado varchar(30)
)
GO


  /*INSERTAMOS VALORES A LA TABLA*/

INSERT INTO trial.BBM_USERDATASSIGNEDPROS VALUES 
   ('USER01','Pepe','PSICOLOGO','AUX01'),
   ('USER02','Paco','LOGOPEDA','AUX02'),
   ('USER03','Lola','ASISTENTE_SOCIAL','AUX03'),
   ('USER04','Diana','TERAPEUTA_OCUPACIONAL','AUX04'),
   ('USER05','Jose','FISIOTERAPEUTA','AUX05'),
   ('USER06','Luis','PSICOLOGO','AUX05'),
   ('USER07','Julia','LOGOPEDA','AUX04'),
   ('USER08','Cristina','ASISTENTE_SOCIAL','AUX03'),
   ('USER08','Toribio','TERAPEUTA_OCUPACIONAL','AUX02'),
   ('USER00','Brigida','FISIOTERAPEUTA','AUX01');
GO									 
--(10 rows affected)


SELECT * FROM trial.BBM_USERDATASSIGNEDPROS

/*POR UN BUG CON LOS PERMISOS TENGO QUE DUPLICAR LA TABLA EN VEZ DE SELECT * INTO*/
DROP TABLE IF EXISTS trial.BBM_USERDATASSIGNEDAUX

CREATE TABLE trial.BBM_USERDATASSIGNEDAUX
(
	ROW# int identity (1,1),
	Usuario varchar (20) NOT NULL, 
	Nombre_Usuario varchar(10) NULL, 
	Pro_asignado Varchar(30) NULL, 
    Aux_asignado varchar(30)
)
GO


  /*INSERTAMOS VALORES A LA TABLA*/

INSERT INTO trial.BBM_USERDATASSIGNEDAUX VALUES 
   ('USER01','Pepe','PSICOLOGO','AUX01'),
   ('USER02','Paco','LOGOPEDA','AUX02'),
   ('USER03','Lola','ASISTENTE_SOCIAL','AUX03'),
   ('USER04','Diana','TERAPEUTA_OCUPACIONAL','AUX04'),
   ('USER05','Jose','FISIOTERAPEUTA','AUX05'),
   ('USER06','Luis','PSICOLOGO','AUX05'),
   ('USER07','Julia','LOGOPEDA','AUX04'),
   ('USER08','Cristina','ASISTENTE_SOCIAL','AUX03'),
   ('USER08','Toribio','TERAPEUTA_OCUPACIONAL','AUX02'),
   ('USER00','Brigida','FISIOTERAPEUTA','AUX01');
GO									 
--(10 rows affected)


SELECT * FROM trial.BBM_USERDATASSIGNEDAUX





/*CREAMOS LOS PROS*/

CREATE USER PSICOLOGO WITHOUT LOGIN; 
CREATE USER LOGOPEDA WITHOUT LOGIN;
CREATE USER ASISTENTE_SOCIAL WITHOUT LOGIN;
CREATE USER TERAPEUTA_OCUPACIONAL WITHOUT LOGIN; 
CREATE USER FISIOTERAPEUTA WITHOUT LOGIN;


/*CREAMOS LOS AUXILIARES*/
CREATE USER AUX01 WITHOUT LOGIN; 
CREATE USER AUX02 WITHOUT LOGIN;
CREATE USER AUX03 WITHOUT LOGIN;
CREATE USER AUX04 WITHOUT LOGIN; 
CREATE USER AUX05 WITHOUT LOGIN;


/*CREAMOS EL ROL DE LOS PROS*/
CREATE ROLE BBM_PROFESIONALES

/*CREAMOS EL ROL DE LOS AUXILIARES*/
CREATE ROLE BBM_AUXILIARES


/*AÑADIMOS USUARIOS AL ROL DE LOS PROS*/
ALTER ROLE BBM_PROFESIONALES ADD MEMBER PSICOLOGO
ALTER ROLE BBM_PROFESIONALES ADD MEMBER LOGOPEDA 
ALTER ROLE BBM_PROFESIONALES ADD MEMBER ASISTENTE_SOCIAL
ALTER ROLE BBM_PROFESIONALES ADD MEMBER TERAPEUTA_OCUPACIONAL
ALTER ROLE BBM_PROFESIONALES ADD MEMBER FISIOTERAPEUTA


/*AÑADIMOS USUARIOS AL ROL DE LOS AUXILIARES*/
ALTER ROLE BBM_AUXILIARES ADD MEMBER AUX01
ALTER ROLE BBM_AUXILIARES ADD MEMBER AUX02
ALTER ROLE BBM_AUXILIARES ADD MEMBER AUX03
ALTER ROLE BBM_AUXILIARES ADD MEMBER AUX04
ALTER ROLE BBM_AUXILIARES ADD MEMBER AUX05




	-- =============================================
-- Create View template
-- =============================================
USE BBM_ASPACE
GO

DROP VIEW IF EXISTS trial.VIEWRLSPROS

CREATE VIEW trial.VIEWRLSPROS WITH SCHEMABINDING AS
SELECT        Usuario, Nombre_Usuario, Pro_asignado
FROM            trial.BBM_USERDATASSIGNEDPROS
go

PRINT USER
SELECT * FROM trial.VIEWRLSPROS

/*OTORGO PERMISOS AL ROL*/
GRANT SELECT ON [trial].[VIEWRLSPROS] TO [BBM_PROFESIONALES]
GO




/*PROBAMOS CON INSERTAR*/
/*PARA DARLE VERACIDAD VAMOS A DAR PERMISOS DE ACTUALIZACIÓN SOLAMENTE SOBRE UNA TABLA, Y A UN NUEVO USUARIO ADMINISTRATIVO, QUE ES EL QUE ASIGNA LOS PACIENTES*/

--CREO EL USUARIO
CREATE USER ASIGNADOR WITHOUT LOGIN; 



-- Granting UPDATE and INSERT access A LOS PROS
GRANT SELECT ON [trial].[BBM_USERDATASSIGNEDPROS] TO [ASIGNADOR]
GO
GRANT UPDATE, INSERT ON trial.BBM_USERDATASSIGNEDPROS TO ASIGNADOR;
GO


/*CON UN TRIGGER, HACEMOS QUE LOS DATOS QUE SE INSERTAN EN LA TABLA DE PROFESIONALES, SE REPLICAN EN LA DE AUXILIARES*/
DROP TRIGGER IF EXISTS trial.trg_UPDATEANOTHERTABLE
GO

CREATE OR ALTER TRIGGER trial.trg_UPDATEANOTHERTABLE ON [trial].[BBM_USERDATASSIGNEDPROS] 
  AFTER UPDATE,INSERT
AS 
BEGIN
   --SET NOCOUNT ON agregado para evitar conjuntos de resultados adicionales
   -- interferir con las instrucciones SELECT.
  SET NOCOUNT ON;

  -- OBTENER LOS VALORES DE LOS CAMPOS
	DECLARE @R int, @U VARCHAR(20), @NU VARCHAR(10), @PA VARCHAR(30), @AA VARCHAR(30)
		SELECT @R = new.ROW#			FROM inserted new;
		SELECT @U =  new.Usuario		FROM inserted new;
		SELECT @NU = new.Nombre_Usuario FROM inserted new;
		SELECT @PA = new.Pro_asignado	FROM inserted new;
		SELECT @AA = new.Aux_asignado	FROM inserted new;

  /*ACTUALIZAR PROS -> ACTUALIZA AUX*/
	 IF (UPDATE(Usuario) OR UPDATE(Nombre_Usuario) OR UPDATE(Pro_asignado)OR UPDATE(Aux_asignado))  /*COGE ESTOS DATOS DE LA TABLA TEST*/
        BEGIN
			INSERT INTO trial.BBM_USERDATASSIGNEDAUX (Usuario, Nombre_Usuario, Pro_asignado, Aux_asignado) VALUES (@U, @NU, @PA,@AA);
			DELETE FROM trial.BBM_USERDATASSIGNEDAUX WHERE ROW# = @R;
            PRINT 'THE EMPLOYEE HAS BEEN UPDATED/INSERTED SUCCESSFULLY'
        END
 END




/*DEMOSTRAMOS EL FUNCIONAMIENTO*/

PRINT USER
GO
-- dbo

SELECT * FROM trial.BBM_USERDATASSIGNEDPROS
GO


-- UPDATE USUARIO QUE SE ASIGNA
EXECUTE AS USER = 'ASIGNADOR';
GO
PRINT USER

SELECT * FROM trial.BBM_USERDATASSIGNEDPROS
WHERE Nombre_Usuario = 'Brigida'
GO



/*PROBAMOS A ACTUALIZAR UNA FILA, PORQUE HA CAMBIADO UN PACIENTE DE AUXILIAR*/
UPDATE trial.BBM_USERDATASSIGNEDPROS 
SET Aux_asignado = 'AUX04' 
WHERE Nombre_Usuario = 'Brigida'
GO
-- (1 row affected)



REVERT
PRINT USER



EXECUTE AS USER = 'AUX04';

PRINT USER
--AUX04

/*TRATAMOS DE VER LA ACTUALIZACIÓN EN LA TABLA DE AUXILIARES PARA VER QUE EL TRIGGER SE DISPARA*/

SELECT * FROM trial.VIEWRLSAUX
GO

REVERT

PRINT USER
--dbo

